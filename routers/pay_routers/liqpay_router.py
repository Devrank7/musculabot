import uuid

from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove, CallbackQuery

from api.bot.access import JoinUser
from api.payments.liqpay_api import generate_url, get_order_status_from_liqpay
from middlewares.middleware import AuthMiddleware

router = Router()
router.message.middleware(AuthMiddleware())


@router.message(F.text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ Liqpay")
async def pay_router(message: Message) -> None:
    order_id = f"o_{uuid.uuid4().hex}"
    print(order_id)
    url = generate_url(order_id, 10)
    buttons = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å üí≥", url=url)],
        [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É ‚ö°", callback_data=order_id)]
    ])
    await message.answer("–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", reply_markup=ReplyKeyboardRemove())
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–ª–∞—Ç—É: ", reply_markup=buttons)


@router.callback_query(F.data.startswith("o_"))
async def order_callback(query: CallbackQuery):
    print(query.data)
    status = get_order_status_from_liqpay(query.data)
    if status:
        await query.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—Ç–∏–ª–∏ –∑–∞–∫–∞–∑!ü•≥", show_alert=True)
        await query.message.delete()
        await JoinUser(query.bot, query.from_user.id).task()
    else:
        await query.answer("–í—ã –µ—â–µ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –∑–∞–∫–∞–∑!‚òπÔ∏è", show_alert=True)
