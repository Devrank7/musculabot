from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from api.bot.access import KickUser
from api.payments.wayforpay_api import remove_regular_invoice
from db.sql.model import User
from db.sql.service import DetachWfpDataFromUser, run_sql
from middlewares.middleware import AuthMiddlewareCallback

router = Router()
router.callback_query.middleware(AuthMiddlewareCallback())

dismiss_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–î–∞", callback_data="dis_yes"),
     InlineKeyboardButton(text="–ù–µ—Ç", callback_data="dis_not")]
])


@router.callback_query(F.data == 'dismiss')
async def dis_callback(query: CallbackQuery, state: FSMContext):
    await query.answer()
    await state.update_data(dis_previous_text=query.message.text)
    await state.update_data(dis_previous_reply=query.message.reply_markup)
    await query.message.edit_text("–í—ã —Ç–æ—á–Ω–æ –≤ —ç—Ç–æ–º —É–≤–µ—Ä–µ–Ω—ã!?", reply_markup=dismiss_button)


@router.callback_query(F.data.startswith('dis_'))
async def dismiss_callback(query: CallbackQuery, user: User, state: FSMContext):
    status = query.data.split("_")[1]
    if status == 'yes':
        await query.message.edit_text('–ú—ã –±—É–¥–µ–º —Å–∫—É—á–∞—Ç—å! –£–¥–∞—á–∏ –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Öüî©')
        if user.wfp_data:
            order = user.wfp_data.order
            await remove_regular_invoice(order)
            await run_sql(DetachWfpDataFromUser(user.tg_id))
            await query.message.answer("–ê–≤—Ç–æ —Å–ø–∏—Å—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ wayforpay –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–Ω–æüòå")
        await query.answer("–ú—ã –±—É–¥–µ–º —Å–∫—É—á–∞—Ç—å!")
        await KickUser(query.bot, user.tg_id, left=True).task()
    else:
        data = await state.get_data()
        text = data['dis_previous_text']
        reply_buttons = data['dis_previous_reply']
        await query.answer("–ù–∞–∑–∞–¥")
        await query.message.edit_text(text, reply_markup=reply_buttons)
    await state.clear()
